{"MLdash":{"description":"\nMLdash is a general real-time montioring system. Runs on top of nodejs and uses <socket.io>.\n\nIt is capable of monitoring statistics from anything capable of producing discrete attributes. It has been successfully demonstrated with 2 use cases so far:\n\n  1. Monitoring a server farm in real time\n  2. Monitoring the state of 36 battery cells in real time on a power flow controller\n\nIt summarises the information on a real-time dashboard available in a web interface.\n\nHere is it monitoring a network of servers.\n\n![Screenshot of MLdash](http://callanbryant.co.uk/images/mldash.png)\n\nDepending on what I wish to do with it, it will be released but licensing is still to be considered.\n","hotkey":"M"},"Profile":{"description":"\n# Education and Qualifications\n\nI am currently studying Electrical and Electronic Engineering (MEng) full time\nat the University of Leicester, having completed a year in industry at\nBroadcom, to graduate in 2013.\n\nI also hold 3 A2 levels (ACD, 2008) 4 AS levels (ABBC, 2007) and 11 GCSE levels\n(AAABBBBBCCC, 2006).\n\n# Experience\n\n## Broadcom industrial placement\n\nFrom 2010 to 2011 I worked at Broadcom in Cambridge as part of the Systems\nintegration group.  I designed and produced a highly successful series of 3D\ncamera/LCD test daughterboards. This involved schematic design, sourcing\ncomponents and mechanical layout. The latest daughterboard interfaces a\ndevelopment kit with 2x Sony IMX060 camera modules and an Omnivision unit, as\nwell as an auto-stereoscopic display from sharp; using CSI/DSI/I2C busses.  I\nalso implemented a hardware continuous integration system used to automatically\ntest various corners of the BCM2763 media co-processor, in a laboratory thermal\nchamber, for every new software check-in. The system automatically contacts the\nrelevant developers when a problem is detected; in addition to summarising the\nresults to a web-based dashboard.  Additionally, I produced an exhibition\nplatform, designed to physically show the power consumption of various phones\nduring HD encoding. The platform has been used since 2010 and has been\nexhibited at numerous times at the the CES and MWC international conventions.\n\n# Practical skills\n\n## Web application development\n\nI am experienced in PHP, Javascript (specifically node.js and jQuery) SQL,\nHTML5 and CSS.  As such, I have implemented a successful open-source music\nindexing/streaming system built on top of a search engine of my own design. The\nproject is available at http://vosbox.org/ and is hosted on github.  The search\nengine that powers Vosbox is able to use SQLite, flat-file, or soon, Redis\nbackends. It works by calculating the intersection of keywords associated with\nthe objects and search string.  I have also designed a universal monitoring\nsystem called “MLDASH,” written in javascript using node.js and websockets,\nthat is capable of monitoring arbitrary real-time data from any source. It will\nalso be released as open-source soon.  A screen-shot of MLDASH – shown\nmonitoring a network of servers – is available on my website.\n\n##  Embedded systems development\n\nI am proficient in designing micro-controller based systems, programmed in C. I\npractice integrating low level protocols such as SPI, I2C, asynchronous serial\nand JTAG.\n\nFor example, my 3rd year project (a lithium-ion battery power flow controller)\nat university makes use of an optically-isolated SPI bus to measure cell\nvoltages and temperatures at arbitrary potentials, allowed by the resulting\ngalvanic isolation. The whole system is able to maintain the state of each cell\nby physically disconnecting each battery from the stack should it exceed its\nthermal or electrical specification; which is useful for charging and\ndischarging. This allows the system to continue supplying or absorbing power,\neven if a number of cells are damaged.\n\n## Electronic design\n\nI am familiar with the Cadence suite, and have industry experience with the\nschematic capture program; following Broadcom’s board review and fabrication\nprocedure.\n\nIn addition to this, I have experience with analog circuit design. For example,\nI have designed a computer fan controller which can visualise fan speed with no\ndigital components. This was achieved by triggering a 555 monostable circuit\nonce per revolution, averaging this signal using a low-pass RC filter, and then\ncomparing the resulting signal with a set of reference voltages to drive an LED\nbar chart.\n\n## Network administration\n\nI have working knowledge of the IP network stack. I run a layer 2 VPN with a\ngroup of people, consisting of 6 servers which host several websites and\nservices. The servers are set up to route traffic and provide a fast internet\nconnection by using a squid caching proxy, dhcpd,  IPTABLES forwarding rules,\nand a hierarchy of BIND servers.\n\n# Positions of responsibility\n\nI am currently managing the electrical team for our Formula student (see\nhttp://www.formulastudent.com/) racing team at my University. A new project for\n2011, we intend to produce an electrical formula-style racing car to compete in\nthe 2013 trials. This involves delegating the work load between my peers and\nco-ordinating the design of the induction motor, battery and motor controller.\nMoreover, during my time at Broadcom I was responsible for sourcing,\nconstructing and tracked distribution of each development kit (given to\ncustomers and internal development staff) in addition to managing the monthly\nlab budget. This was important in order to ensure the smooth running of the\nmobile multimedia department.  Career plans and profile Completing my year in\nindustry has made me certain of my career path. I have realized I thrive in an\nenvironment that requires innovation!  I intend to work as an Electrical &\nElectronic engineer, and hope to work on both hardware and software whenever\npossible. I would additionally like to further develop my management skills.  I\nthink I am suited to being an Engineer, possibly managing, as I recognise that\nthe challenge is to produce elegant -- not just functional -- systems.  I have\na non-dismissive attitude; if I am unfamiliar with something, I won’t afraid to\nadmit it, then ask questions or research the matter.\n\n# Hobbies and interests\n\nIn my spare time, I have a great interest in open source software and hardware.\nI enjoy developing software and hardware for the sake of learning and creating\nsomething elegant.  I am also currently developing a scalable home automation\nsystem that aims to control security, lighting and audio aspects.\n\n---\n\n[Download as PDF](Callan_Bryant.pdf 'CV')\n\nEmail me using callan.bryant@gmail.com\n","hotkey":"P"},"Vosbox":{"url":"http://github.com/naggie/vosbox/","description":"\n**vosbox is a HTML5 PHP/jQuery based jukebox.**\n\nDemo playlist, using creative commons licensed music, at <http://ccjukebox.com/#dc022a5a92>\n\n![Screenshot of vosbox](http://callanbryant.co.uk/images/vosbox.png)\n\nIt supports\n\n  * A search-oriented interface\n  * Making and sharing playlists (via a link)\n  * Album art\n  * Watching a directory for new music\n  * A tag-based index\n  * Keyboard shortcuts\n  * A simple interface and API\n  * Flat file and sqlite backends (documentation for that coming soon)\n  * Flash fallback via SoundManager2 library\n\nGiven an arbitrary mess of MP3s in any directory structure, vosbox will\nfind all MP3s, prefering high-quality files.\n\nAlbum art will be extracted and resized using the <imagemagick.org> library\nfrom the MP3 file with the fantastic <http://GetID3.org/> library, or loaded from\nthe containing folder.\n\nvosbox currently supports sqlite or file based backends, with support\nfor any other database easy to implement.\n\nA native android app that uses the API is planned.\n\n\n----\n\n# Dependencies\n\n  * php-imagick\n  * The php JSON extension\n  * inotify-tools (if you want to watch a directory)\n\n# Usage\n\n  1. Serve `www/` with Apache and PHP\n  2. Crawl any directory (read permissions required) with\n     `cli/crawl.sh <directory>`\n  3. Watch that directory, if required, for new songs with\n     `cli/watch.sh <directory>`\n\n# Keyboard shortcuts\n\n\tf       : search\n\tup/down : prev/next\n\td       : download active song\n\tspace   : pause/play\n\ts       : shuffle\n\n# Mouse functions\n\nSearch results: Left click to play, right click to enqueue.\n\nPlaylist: Left click to play, right click to delete\n\n# JSON API\n\nSongs are returned as the following JSON-formatted objects:\n\n\t{\n\t\ttitle      : \"The song name\",\n\t\tartist     : \"The artist name\",\n\t\talbum      : \"The album name\",\n\t\tyear       : \"2009\",\n\t\tgenre      : \"Indie\",\n\t\tid         : \"74a12d502d7393e139e2fcca51200d67\",\n\t\talbumArtId : \"b092c997d98e13a21431c9ce58b80fbf\"\n\t}\n\n  * To search for anything, POST or GET it as the parameter **keywords** to\n\n\tapi/search.php?keywords=\n\n  * To save a playlist, POST a CSV list of IDs as the parameter **save**\n\n\tapi/playlist.php?save=\n\n  * To load a playlist, POST or GET the playlist ID as the parameter **load**\n\n\tapi/playlist.php?load=\n\n  * To download album art, POST or GET the albumArt ID, given in the song object,\n    using the parameter **id** (the result is a 128x128 JPG):\n\n\tapi/albumArt.php?id=\n\n  * To download the song itself (currently MP3 only) POST or GET the song ID, as\n    the parameter **id** to:\n\n\tapi/download.php?id=\n\n\n----\n\n# The vosbox search engine (VSE)\n\nThe search engine that powers vosbox is very different to a standard fulltext search engine.\n\nHow it indexes:\n\n  1. A PHP object per item, with descriptive attributes is added\n  2. This object is scraped for unique lower-case alphanumeric keywords (using the tokeniser)\n  3. The object is stored under an ID (specified or created automatically)\n  4. Per keyword, the ID is associated in a reverse-map list\n\nHow it searches:\n\n  1. The search string is tokenised in the same manner\n  2. For each keyword, the corresponding list of IDs is intersected with the last (by the backend)\n  3. The resulting intersection of IDs is used to return a set number of corresponding objects\n\nThis can be acheived with, currently, a file based or sqlite based backend.\n\nThe idea is that avoiding fulltext search queries with multiple wildcards results in a speed\nincrease.\n\n# Configuration\n\nIn order to choose a different indexer, simply create `var/config.php` and define the constant\n`INDEXER` to be either `sqlite` or `keystore`. Redis is also planned, and will involve defining\nsome more constants.\n\n\n----\n\nVosbox uses the following excellent libraries:\n\n  * [jQuery](http://jquery.com)\n  * [js-hotkeys plugin](http://code.google.com/p/js-hotkeys/)\n  * [jQuery rightClick plugin](http://abeautifulsite.net/blog/2008/05/jquery-right-click-plugin/)\n  * [jQuery shuffle plugin](http://www.yelotofu.com/2008/08/jquery-shuffle-plugin/)\n  * [css3buttons by Micheal Henriksen](https://github.com/michenriksen/css3buttons)\n  * [getID3](http://getid3.org/)\n  * [SoundManager2](http://www.schillmania.com/projects/soundmanager2/)\n\n----\n\nUse vosbox? Please consider donating to allow continued development.\n\n<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n<input type=\"hidden\" name=\"cmd\" value=\"_donations\">\n<input type=\"hidden\" name=\"business\" value=\"callan1990@googlemail.com\">\n<input type=\"hidden\" name=\"lc\" value=\"GB\">\n<input type=\"hidden\" name=\"item_name\" value=\"Vosbox\">\n<input type=\"hidden\" name=\"no_note\" value=\"0\">\n<input type=\"hidden\" name=\"currency_code\" value=\"GBP\">\n<input type=\"hidden\" name=\"bn\" value=\"PP-DonationsBF:btn_donateCC_LG.gif:NonHostedGuest\">\n<input type=\"image\" src=\"https://www.paypalobjects.com/en_US/GB/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" alt=\"PayPal -- The safer, easier way to pay online.\">\n<img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/en_GB/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n</form>\n\n","hotkey":"V"}}